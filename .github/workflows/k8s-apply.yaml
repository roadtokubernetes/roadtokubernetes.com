name: 4 - Apply Kubernetes
on: 
  workflow_dispatch:

jobs:
  k8s_changes:
    name: Apply K8s Changes
    runs-on: ubuntu-latest
    steps:
      - uses: azure/setup-kubectl@v3
      - uses: actions/checkout@v1
      - name: Create/Verify `.kube` directory
        run: mkdir -p ~/.kube/
      - name: Create kubectl config
        run: |
          cat << EOF >> ~/.kube/kubeconfig.yaml
          apiVersion: v1
          clusters:
          - cluster:
              certificate-authority-data: ${{ secrets.KUBE_CERTIFICATE }}
              server: ${{ secrets.KUBE_HOST }}
            name: ${{ secrets.KUBE_CLUSTER_NAME }}
          contexts:
          - context:
              cluster: ${{ secrets.KUBE_CLUSTER_NAME }}
              namespace: ${{ secrets.KUBE_NAMESPACE }}
              user: ${{ secrets.KUBE_USER }}
            name: ${{ secrets.KUBE_CLUSTER_NAME }}-ctx
          current-context: ${{ secrets.KUBE_CLUSTER_NAME }}-ctx
          kind: Config
          preferences: {}
          users:
          - name: ${{ secrets.KUBE_USER }}
            user:
              token: ${{ secrets.KUBE_TOKEN }}
          EOF
      - name: Update deployment secrets
        run: |
          cat << EOF >> src/prod.env
          ALLOWED_HOST=${{ secrets.ALLOWED_HOST }}
          BASE_URL=${{ secrets.BASE_URL }}
          DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}
          DJANGO_DEBUG=${{ secrets.DJANGO_DEBUG }}
          DEFAULT_ADMIN_HOST=${{ secrets.DEFAULT_ADMIN_HOST }}
          LINODE_BUCKET=${{ secrets.LINODE_BUCKET }}
          LINODE_BUCKET_REGION=${{ secrets.LINODE_BUCKET_REGION }}
          LINODE_BUCKET_ACCESS_KEY=${{ secrets.LINODE_BUCKET_ACCESS_KEY }}
          LINODE_BUCKET_SECRET_KEY=${{ secrets.LINODE_BUCKET_SECRET_KEY }}
          USE_REMOTE_STATIC=${{ secrets.USE_REMOTE_STATIC }}
          EOF
          KUBECONFIG=~/.kube/kubeconfig.yaml kubectl delete secret www-roadtokubernetes-com-prod-env --ignore-not-found
          KUBECONFIG=~/.kube/kubeconfig.yaml kubectl create secret generic www-roadtokubernetes-com-prod-env --from-env-file=src/prod.env
      - name: Apply deployment and service
        run: |
          KUBECONFIG=~/.kube/kubeconfig.yaml kubectl apply -f k8s/
      - name: Update Deployment
        run: |
          KUBECONFIG=~/.kube/kubeconfig.yaml kubectl set image \
          deployment/www-roadtokubernetes-com-deployment \
          www-roadtokubernetes-com-container=${{ secrets.DOCKERHUB_USERNAME }}/roadtokubernetes.com:latest
      - name: Perform Deployment rollout
        run: |
          KUBECONFIG=~/.kube/kubeconfig.yaml kubectl rollout restart deployment/www-roadtokubernetes-com-deployment
      