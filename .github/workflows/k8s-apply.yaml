name: 4 - Apply Kubernetes
on: 
  workflow_dispatch:
  workflow_call:
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      KUBE_HOST:
        required: true
      KUBE_CERTIFICATE:
        required: true
      KUBE_CLUSTER_NAME:
        required: true
      KUBE_NAMESPACE:
        required: true
      KUBE_USER:
        required: true
      KUBE_TOKEN: 
        required: true
      ALLOWED_HOST: 
        required: true
      ALLOWED_HOSTS:
        required: true
      BASE_URL: 
        required: true
      DJANGO_SECRET_KEY: 
        required: true
      DJANGO_DEBUG: 
        required: true
      PARENT_HOST:
        required: true
      SESSION_DOMAIN:
        required: true
      DEFAULT_ADMIN_HOST: 
        required: true
      LINODE_BUCKET: 
        required: true
      LINODE_BUCKET_REGION: 
        required: true
      LINODE_BUCKET_ACCESS_KEY: 
        required: true
      LINODE_BUCKET_SECRET_KEY: 
        required: true
      USE_REMOTE_STATIC: 
        required: true
      POSTGRES_DB: 
        required: true
      POSTGRES_USER: 
        required: true
      POSTGRES_PASSWORD: 
        required: true
      POSTGRES_HOST: 
        required: true
      POSTGRES_PORT: 
        required: true
      POSTGRES_DB_REQUIRE_SSL: 
        required: true
      EMAIL_HOST: 
        required: true
      EMAIL_HOST_USER: 
        required: true
      EMAIL_HOST_PASSWORD: 
        required: true
      DEFAULT_FROM_EMAIL: 
        required: true
      SERVER_EMAIL: 
        required: true
      MANAGER_EMAIL: 
        required: true
      BLOG_TOKEN:
        required: true
      GH_WEBHOOK_SECRET:
        required: true

jobs:
  k8s_changes:
    name: Apply K8s Changes
    runs-on: ubuntu-latest
    steps:
      - uses: azure/setup-kubectl@v3
      - uses: actions/checkout@v1
      - name: Create/Verify `.kube` directory
        run: mkdir -p ~/.kube/
      - name: Create kubectl config
        run: |
          cat << EOF >> ~/.kube/kubeconfig.yaml
          apiVersion: v1
          clusters:
          - cluster:
              certificate-authority-data: ${{ secrets.KUBE_CERTIFICATE }}
              server: ${{ secrets.KUBE_HOST }}
            name: ${{ secrets.KUBE_CLUSTER_NAME }}
          contexts:
          - context:
              cluster: ${{ secrets.KUBE_CLUSTER_NAME }}
              namespace: ${{ secrets.KUBE_NAMESPACE }}
              user: ${{ secrets.KUBE_USER }}
            name: ${{ secrets.KUBE_CLUSTER_NAME }}-ctx
          current-context: ${{ secrets.KUBE_CLUSTER_NAME }}-ctx
          kind: Config
          preferences: {}
          users:
          - name: ${{ secrets.KUBE_USER }}
            user:
              token: ${{ secrets.KUBE_TOKEN }}
          EOF
      - name: Update deployment secrets
        run: |
          cat << EOF >> src/prod.env
          ALLOWED_HOST=${{ secrets.ALLOWED_HOST }}
          ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}
          BASE_URL=${{ secrets.BASE_URL }}
          DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}
          DJANGO_DEBUG=${{ secrets.DJANGO_DEBUG }}
          PARENT_HOST=${{ secrets.PARENT_HOST }}
          SESSION_DOMAIN=${{ secrets.SESSION_DOMAIN }}
          DEFAULT_ADMIN_HOST=${{ secrets.DEFAULT_ADMIN_HOST }}
          LINODE_BUCKET=${{ secrets.LINODE_BUCKET }}
          LINODE_BUCKET_REGION=${{ secrets.LINODE_BUCKET_REGION }}
          LINODE_BUCKET_ACCESS_KEY=${{ secrets.LINODE_BUCKET_ACCESS_KEY }}
          LINODE_BUCKET_SECRET_KEY=${{ secrets.LINODE_BUCKET_SECRET_KEY }}
          USE_REMOTE_STATIC=${{ secrets.USE_REMOTE_STATIC }}
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}
          POSTGRES_DB_REQUIRE_SSL=${{ secrets.POSTGRES_DB_REQUIRE_SSL }}
          EMAIL_HOST=${{ secrets.EMAIL_HOST }}
          EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }}
          EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}
          DEFAULT_FROM_EMAIL=${{ secrets.DEFAULT_FROM_EMAIL }}
          SERVER_EMAIL=${{ secrets.SERVER_EMAIL }}
          MANAGER_EMAIL=${{ secrets.MANAGER_EMAIL }}
          BLOG_TOKEN=${{ secrets.BLOG_TOKEN }}
          GH_WEBHOOK_SECRET=${{ secrets.GH_WEBHOOK_SECRET }}
          EOF
          KUBECONFIG=~/.kube/kubeconfig.yaml kubectl delete secret www-roadtokubernetes-com-prod-env --ignore-not-found
          KUBECONFIG=~/.kube/kubeconfig.yaml kubectl create secret generic www-roadtokubernetes-com-prod-env --from-env-file=src/prod.env
      - name: Apply deployment and service
        run: |
          KUBECONFIG=~/.kube/kubeconfig.yaml kubectl apply -f k8s/
      - name: Update Deployment
        run: |
          KUBECONFIG=~/.kube/kubeconfig.yaml kubectl set image \
          deployment/www-roadtokubernetes-com-deployment \
          www-roadtokubernetes-com-container=${{ secrets.DOCKERHUB_USERNAME }}/roadtokubernetes.com:latest
      - name: Perform Deployment rollout
        run: |
          KUBECONFIG=~/.kube/kubeconfig.yaml kubectl rollout restart deployment/www-roadtokubernetes-com-deployment
      